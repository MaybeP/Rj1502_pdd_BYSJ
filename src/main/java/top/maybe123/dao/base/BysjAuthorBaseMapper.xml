<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.maybe123.dao.base.BysjAuthorBaseMapper">


    <insert id="insertBysjAuthor"  useGeneratedKeys="true" keyProperty="Id">
        INSERT INTO `bysj_author`
        (
        <trim suffixOverrides=",">
                    <if test="Id!=null">
                        `Id`,
                    </if>
                    <if test="au_name!=null">
                        `au_name`,
                    </if>
                    <if test="au_country!=null">
                        `au_country`,
                    </if>
                    <if test="au_job!=null">
                        `au_job`,
                    </if>
                    <if test="au_famous!=null">
                        `au_famous`,
                    </if>
                    <if test="au_say!=null">
                        `au_say`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="Id!=null">
                    #{Id},
                </if>
                <if test="au_name!=null">
                    #{au_name},
                </if>
                <if test="au_country!=null">
                    #{au_country},
                </if>
                <if test="au_job!=null">
                    #{au_job},
                </if>
                <if test="au_famous!=null">
                    #{au_famous},
                </if>
                <if test="au_say!=null">
                    #{au_say},
                </if>
        </trim>
        )
    </insert>




    <update id="updateBysjAuthor">
        UPDATE `bysj_author`
        SET
        <trim suffixOverrides=",">
            <if test="au_name != null and au_name!=''">
                `au_name` = #{au_name},
            </if>
            <if test="au_country != null and au_country!=''">
                `au_country` = #{au_country},
            </if>
            <if test="au_job != null and au_job!=''">
                `au_job` = #{au_job},
            </if>
            <if test="au_famous != null and au_famous!=''">
                `au_famous` = #{au_famous},
            </if>
            <if test="au_say != null and au_say!=''">
                `au_say` = #{au_say},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `Id` = #{Id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `bysj_author`
        SET
        <trim suffixOverrides=",">
        <if test="set.au_name != null and set.au_name!=''">
            `au_name` = #{set.au_name},
        </if>
        <if test="set.au_country != null and set.au_country!=''">
            `au_country` = #{set.au_country},
        </if>
        <if test="set.au_job != null and set.au_job!=''">
            `au_job` = #{set.au_job},
        </if>
        <if test="set.au_famous != null and set.au_famous!=''">
            `au_famous` = #{set.au_famous},
        </if>
        <if test="set.au_say != null and set.au_say!=''">
            `au_say` = #{set.au_say},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.IdList != null">
                    `Id` in
                    <foreach collection="where.IdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.IdSt !=null">
                `Id` >= #{where.IdSt} and
            </if>
            <if test="where.IdEd!=null">
                `Id` &lt;= #{where.IdEd} and
            </if>
                <if test="where.au_nameList != null">
                    `au_name` in
                    <foreach collection="where.au_nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyAu_name!=null and where.fuzzyAu_name.size()>0">
                (
                <foreach collection="where.fuzzyAu_name"  separator="or" item="item">
                    `Au_name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyAu_name!=null and where.rightFuzzyAu_name.size()>0">
                (
                <foreach collection="where.rightFuzzyAu_name"  separator="or" item="item">
                    `Au_name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.au_countryList != null">
                    `au_country` in
                    <foreach collection="where.au_countryList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyAu_country!=null and where.fuzzyAu_country.size()>0">
                (
                <foreach collection="where.fuzzyAu_country"  separator="or" item="item">
                    `Au_country` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyAu_country!=null and where.rightFuzzyAu_country.size()>0">
                (
                <foreach collection="where.rightFuzzyAu_country"  separator="or" item="item">
                    `Au_country` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.au_jobList != null">
                    `au_job` in
                    <foreach collection="where.au_jobList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyAu_job!=null and where.fuzzyAu_job.size()>0">
                (
                <foreach collection="where.fuzzyAu_job"  separator="or" item="item">
                    `Au_job` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyAu_job!=null and where.rightFuzzyAu_job.size()>0">
                (
                <foreach collection="where.rightFuzzyAu_job"  separator="or" item="item">
                    `Au_job` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.au_famousList != null">
                    `au_famous` in
                    <foreach collection="where.au_famousList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyAu_famous!=null and where.fuzzyAu_famous.size()>0">
                (
                <foreach collection="where.fuzzyAu_famous"  separator="or" item="item">
                    `Au_famous` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyAu_famous!=null and where.rightFuzzyAu_famous.size()>0">
                (
                <foreach collection="where.rightFuzzyAu_famous"  separator="or" item="item">
                    `Au_famous` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.au_sayList != null">
                    `au_say` in
                    <foreach collection="where.au_sayList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyAu_say!=null and where.fuzzyAu_say.size()>0">
                (
                <foreach collection="where.fuzzyAu_say"  separator="or" item="item">
                    `Au_say` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyAu_say!=null and where.rightFuzzyAu_say.size()>0">
                (
                <foreach collection="where.rightFuzzyAu_say"  separator="or" item="item">
                    `Au_say` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
        </trim>
    </update>


    <resultMap type="top.maybe123.dao.BysjAuthor" id="BysjAuthorMap">
        <result property="Id" column="Id"/>
        <result property="au_name" column="au_name"/>
        <result property="au_country" column="au_country"/>
        <result property="au_job" column="au_job"/>
        <result property="au_famous" column="au_famous"/>
        <result property="au_say" column="au_say"/>
    </resultMap>


    <select id="queryBysjAuthor" resultMap="BysjAuthorMap">
        select
        <include refid="baseResult"></include>
        from  `bysj_author`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="Id != null">
                `Id` = #{Id} and
            </if>
            <if test="au_name != null and au_name!=''">
                `au_name` = #{au_name} and
            </if>
            <if test="au_country != null and au_country!=''">
                `au_country` = #{au_country} and
            </if>
            <if test="au_job != null and au_job!=''">
                `au_job` = #{au_job} and
            </if>
            <if test="au_famous != null and au_famous!=''">
                `au_famous` = #{au_famous} and
            </if>
            <if test="au_say != null and au_say!=''">
                `au_say` = #{au_say} and
            </if>
            <if test = "(_parameter instanceof packageModel.BysjAuthor$QueryBuilder) == true">
                <if test="IdList != null">
                    `Id` in
                    <foreach collection="IdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="IdSt !=null">
                    `Id` >= #{IdSt} and
                </if>
                <if test="IdEd!=null">
                    `Id` &lt;= #{IdEd} and
                </if>
                <if test="au_nameList != null">
                    `au_name` in
                    <foreach collection="au_nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyAu_name!=null and fuzzyAu_name.size()>0">
                    (
                    <foreach collection="fuzzyAu_name"  separator="or" item="item">
                        `Au_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_name!=null and rightFuzzyAu_name.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_name"  separator="or" item="item">
                        `Au_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="au_countryList != null">
                    `au_country` in
                    <foreach collection="au_countryList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyAu_country!=null and fuzzyAu_country.size()>0">
                    (
                    <foreach collection="fuzzyAu_country"  separator="or" item="item">
                        `Au_country` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_country!=null and rightFuzzyAu_country.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_country"  separator="or" item="item">
                        `Au_country` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="au_jobList != null">
                    `au_job` in
                    <foreach collection="au_jobList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyAu_job!=null and fuzzyAu_job.size()>0">
                    (
                    <foreach collection="fuzzyAu_job"  separator="or" item="item">
                        `Au_job` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_job!=null and rightFuzzyAu_job.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_job"  separator="or" item="item">
                        `Au_job` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="au_famousList != null">
                    `au_famous` in
                    <foreach collection="au_famousList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyAu_famous!=null and fuzzyAu_famous.size()>0">
                    (
                    <foreach collection="fuzzyAu_famous"  separator="or" item="item">
                        `Au_famous` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_famous!=null and rightFuzzyAu_famous.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_famous"  separator="or" item="item">
                        `Au_famous` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="au_sayList != null">
                    `au_say` in
                    <foreach collection="au_sayList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyAu_say!=null and fuzzyAu_say.size()>0">
                    (
                    <foreach collection="fuzzyAu_say"  separator="or" item="item">
                        `Au_say` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_say!=null and rightFuzzyAu_say.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_say"  separator="or" item="item">
                        `Au_say` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryBysjAuthorLimit1" resultMap="BysjAuthorMap">
        select
        <include refid="baseResult"></include>
        from  `bysj_author`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="Id != null">
                `Id` = #{Id} and
            </if>
            <if test="au_name != null and au_name!=''">
                `au_name` = #{au_name} and
            </if>
            <if test="au_country != null and au_country!=''">
                `au_country` = #{au_country} and
            </if>
            <if test="au_job != null and au_job!=''">
                `au_job` = #{au_job} and
            </if>
            <if test="au_famous != null and au_famous!=''">
                `au_famous` = #{au_famous} and
            </if>
            <if test="au_say != null and au_say!=''">
                `au_say` = #{au_say} and
            </if>
            <if test = "(_parameter instanceof packageModel.BysjAuthor$QueryBuilder) == true">
                    <if test="IdList != null">
                        `Id` in
                        <foreach collection="IdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="IdSt !=null">
                    `Id` >= #{IdSt} and
                </if>
                <if test="IdEd!=null">
                    `Id` &lt;= #{IdEd} and
                </if>
                    <if test="au_nameList != null">
                        `au_name` in
                        <foreach collection="au_nameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyAu_name!=null and fuzzyAu_name.size()>0">
                    (
                    <foreach collection="fuzzyAu_name"  separator="or" item="item">
                        `Au_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_name!=null and rightFuzzyAu_name.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_name"  separator="or" item="item">
                        `Au_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="au_countryList != null">
                        `au_country` in
                        <foreach collection="au_countryList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyAu_country!=null and fuzzyAu_country.size()>0">
                    (
                    <foreach collection="fuzzyAu_country"  separator="or" item="item">
                        `Au_country` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_country!=null and rightFuzzyAu_country.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_country"  separator="or" item="item">
                        `Au_country` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="au_jobList != null">
                        `au_job` in
                        <foreach collection="au_jobList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyAu_job!=null and fuzzyAu_job.size()>0">
                    (
                    <foreach collection="fuzzyAu_job"  separator="or" item="item">
                        `Au_job` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_job!=null and rightFuzzyAu_job.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_job"  separator="or" item="item">
                        `Au_job` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="au_famousList != null">
                        `au_famous` in
                        <foreach collection="au_famousList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyAu_famous!=null and fuzzyAu_famous.size()>0">
                    (
                    <foreach collection="fuzzyAu_famous"  separator="or" item="item">
                        `Au_famous` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_famous!=null and rightFuzzyAu_famous.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_famous"  separator="or" item="item">
                        `Au_famous` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="au_sayList != null">
                        `au_say` in
                        <foreach collection="au_sayList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyAu_say!=null and fuzzyAu_say.size()>0">
                    (
                    <foreach collection="fuzzyAu_say"  separator="or" item="item">
                        `Au_say` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyAu_say!=null and rightFuzzyAu_say.size()>0">
                    (
                    <foreach collection="rightFuzzyAu_say"  separator="or" item="item">
                        `Au_say` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `Id`,
        `au_name`,
        `au_country`,
        `au_job`,
        `au_famous`,
        `au_say`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof packageModel.BysjAuthor$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.Id==true">
                        `Id`,
                    </if>
                    <if test="fetchFields.fetchFields.au_name==true">
                        `au_name`,
                    </if>
                    <if test="fetchFields.fetchFields.au_country==true">
                        `au_country`,
                    </if>
                    <if test="fetchFields.fetchFields.au_job==true">
                        `au_job`,
                    </if>
                    <if test="fetchFields.fetchFields.au_famous==true">
                        `au_famous`,
                    </if>
                    <if test="fetchFields.fetchFields.au_say==true">
                        `au_say`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.Id==null">
                        `Id`,
                    </if>
                    <if test="fetchFields.excludeFields.au_name==null">
                        `au_name`,
                    </if>
                    <if test="fetchFields.excludeFields.au_country==null">
                        `au_country`,
                    </if>
                    <if test="fetchFields.excludeFields.au_job==null">
                        `au_job`,
                    </if>
                    <if test="fetchFields.excludeFields.au_famous==null">
                        `au_famous`,
                    </if>
                    <if test="fetchFields.excludeFields.au_say==null">
                        `au_say`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof packageModel.BysjAuthor$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>